{
  "name": "stm32-configurator-by-zuolan",
  "displayName": "STM32 Debug Configurator (by zuolan)",
  "description": "A visual configurator for STM32 Cortex-Debug.",
  "version": "0.2.0",
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "icon": "icon.png",
  "author": "左岚",
  "publisher": "zuolan",
  "repository": {
    "type": "git",
    "url": "https://github.com/zuoliangyu/stm32-configurator-by-zuolan.git"
  },
  "activationEvents": [
    "onCommand:stm32-configurator-by-zuolan.start",
    "onView:stm32-configurator-explorer"
  ],
  "extensionDependencies": [
    "marus25.cortex-debug"
  ],
  "extensionRecommendations": [
    "marus25.cortex-debug"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "stm32-configurator-explorer",
          "title": "STM32 Configurator",
          "icon": "$(chip)"
        }
      ]
    },
    "views": {
      "stm32-configurator-explorer": [
        {
          "id": "stm32-configurator-tree",
          "name": "Debug Configuration",
          "when": "true",
          "contextualTitle": "STM32 Debug Configuration"
        }
      ]
    },
    "commands": [
      {
        "command": "stm32-configurator-by-zuolan.start",
        "title": "Generate Debug Configuration",
        "category": "STM32",
        "icon": "$(gear)"
      },
      {
        "command": "stm32-configurator-by-zuolan.refresh",
        "title": "Refresh",
        "category": "STM32",
        "icon": "$(refresh)"
      },
      {
        "command": "stm32-configurator-by-zuolan.openConfig",
        "title": "Open Configuration",
        "category": "STM32",
        "icon": "$(file)"
      },
      {
        "command": "stm32-configurator-by-zuolan.addLiveWatchVariable",
        "title": "Add LiveWatch Variable",
        "category": "STM32",
        "icon": "$(add)"
      },
      {
        "command": "stm32-configurator-by-zuolan.removeLiveWatchVariable",
        "title": "Remove LiveWatch Variable",
        "category": "STM32",
        "icon": "$(remove)"
      },
      {
        "command": "stm32-configurator-by-zuolan.toggleLanguage",
        "title": "Toggle Language (中文/English)",
        "category": "STM32",
        "icon": "$(globe)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "stm32-configurator-by-zuolan.start",
          "when": "view == stm32-configurator-tree",
          "group": "navigation@1"
        },
        {
          "command": "stm32-configurator-by-zuolan.refresh",
          "when": "view == stm32-configurator-tree",
          "group": "navigation@2"
        }
      ],
      "view/item/context": [
        {
          "command": "stm32-configurator-by-zuolan.openConfig",
          "when": "view == stm32-configurator-tree && viewItem == configuration",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "stm32-configurator-by-zuolan.addLiveWatchVariable",
          "when": "debugType == cortex-debug"
        },
        {
          "command": "stm32-configurator-by-zuolan.removeLiveWatchVariable",
          "when": "debugType == cortex-debug"
        },
        {
          "command": "stm32-configurator-by-zuolan.toggleLanguage"
        }
      ]
    },
    "configuration": {
      "title": "STM32 Configurator",
      "properties": {
        "stm32-configurator.openocdPath": {
          "type": "string",
          "default": "",
          "description": "Custom path to OpenOCD executable. Leave empty for automatic detection.",
          "scope": "resource"
        },
        "stm32-configurator.language": {
          "type": "string",
          "enum": [
            "en",
            "zh"
          ],
          "default": "en",
          "description": "Extension display language (English/中文)",
          "scope": "application"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./ && copyfiles -u 1 \"src/webview/**/*\" out/",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.80.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.15.0",
    "@typescript-eslint/eslint-plugin": "^5.59.1",
    "@typescript-eslint/parser": "^5.59.1",
    "eslint": "^8.39.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.0.4",
    "@vscode/test-electron": "^2.3.2",
    "copyfiles": "^2.4.1"
  }
}
